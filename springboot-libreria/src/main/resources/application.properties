spring.application.name=springboot-libreria
# ===============================
# DATASOURCE CONFIGURATION
# ===============================
# PostgreSQL connection URL. Replace "localhost:5432" if your DB is elsewhere, and "libreria_db" with your database name.
spring.datasource.url=jdbc:postgresql://localhost:5432/libreria_db
# PostgreSQL username
spring.datasource.username=postgres
# PostgreSQL password
spring.datasource.password=postgres
# PostgreSQL JDBC driver
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA & HIBERNATE CONFIGURATION
# ===============================
# Specify the Hibernate dialect for PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate DDL auto (Database Definition Language)
# create: drops the existing schema and creates it again on startup.
# create-drop: creates the schema on startup and drops it on shutdown.
# update: updates the schema if there are differences.
# validate: validates the schema, makes no changes to the database.
# none: does nothing.
# WARNING: "create" or "create-drop" will WIPE your data on each restart. Use with caution.
spring.jpa.hibernate.ddl-auto=create

# Show SQL statements in the console (useful for debugging)
spring.jpa.show-sql=true

# Format SQL statements in the console for better readability
spring.jpa.properties.hibernate.format_sql=true

# This property might be needed for some LOB (Large Object) handling with PostgreSQL
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true